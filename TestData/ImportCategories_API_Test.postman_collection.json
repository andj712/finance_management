{
  "info": {
    "_postman_id": "{{$guid}}",
    "name": "Finance Management - Categories",
    "description": "Collection for managing categories in finance management system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Import Categories",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test response status",
              "pm.test(\"Status code is 200 for successful import\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Test for validation errors (400 status)",
              "pm.test(\"Handle validation errors properly\", function () {",
              "    if (pm.response.code === 400) {",
              "        const responseJson = pm.response.json();",
              "        pm.expect(responseJson).to.have.property('errors');",
              "        pm.expect(responseJson.errors).to.be.an('array');",
              "        ",
              "        // Validate error structure",
              "        if (responseJson.errors.length > 0) {",
              "            const error = responseJson.errors[0];",
              "            pm.expect(error).to.have.property('tag');",
              "            pm.expect(error).to.have.property('error');",
              "            pm.expect(error).to.have.property('message');",
              "        }",
              "    }",
              "});",
              "",
              "// Test for business errors (440 status)",
              "pm.test(\"Handle business errors properly\", function () {",
              "    if (pm.response.code === 440) {",
              "        const responseJson = pm.response.json();",
              "        pm.expect(responseJson).to.have.property('problem');",
              "        pm.expect(responseJson).to.have.property('message');",
              "        pm.expect(responseJson).to.have.property('details');",
              "    }",
              "});",
              "",
              "// Test response time",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "multipart/form-data",
            "type": "text",
            "disabled": true
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "csv-file",
              "description": "CSV file containing categories data",
              "type": "file",
              "src": []
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/categories/import",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "categories",
            "import"
          ]
        },
        "description": "Import categories from uploaded CSV file"
      },
      "response": [
        {
          "name": "Successful Import",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "csv-file",
                  "type": "file",
                  "src": "/path/to/categories.csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/categories/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories",
                "import"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": ""
        },
        {
          "name": "Validation Error - Missing File",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "url": {
              "raw": "{{baseUrl}}/categories/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories",
                "import"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"errors\": [\n    {\n      \"tag\": \"csv-file\",\n      \"error\": \"required\",\n      \"message\": \"File is required\"\n    }\n  ]\n}"
        },
        {
          "name": "Validation Error - Invalid Data",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "csv-file",
                  "type": "file",
                  "src": "/path/to/invalid-categories.csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/categories/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories",
                "import"
              ]
            }
          },
          "status": "Bad Request",
          "code": 400,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"errors\": [\n    {\n      \"tag\": \"code\",\n      \"error\": \"required\",\n      \"message\": \"Category code is required\"\n    },\n    {\n      \"tag\": \"name\",\n      \"error\": \"maxLength\",\n      \"message\": \"Category name exceeds maximum length\"\n    }\n  ]\n}"
        },
        {
          "name": "Business Error",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "csv-file",
                  "type": "file",
                  "src": "/path/to/categories.csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/categories/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories",
                "import"
              ]
            }
          },
          "status": "Login Time-out",
          "code": 440,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"problem\": \"duplicate-category\",\n  \"message\": \"Category with this code already exists\",\n  \"details\": \"Cannot import category with code 'C001' as it already exists in the system\"\n}"
        },
        {
          "name": "Server Error",
          "originalRequest": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "File",
                  "type": "file",
                  "src": "/path/to/categories.csv"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/categories/import",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories",
                "import"
              ]
            }
          },
          "status": "Internal Server Error",
          "code": 500,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"message\": \"An error occurred while processing the request\"\n}"
        }
      ]
    },
    {
      "name": "Get Categories",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Test response status",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// Test response structure",
              "pm.test(\"Response has correct structure\", function () {",
              "    const responseJson = pm.response.json();",
              "    pm.expect(responseJson).to.have.property('items');",
              "    pm.expect(responseJson.items).to.be.an('array');",
              "});",
              "",
              "// Test category structure",
              "pm.test(\"Categories have correct structure\", function () {",
              "    const responseJson = pm.response.json();",
              "    if (responseJson.items.length > 0) {",
              "        const category = responseJson.items[0];",
              "        pm.expect(category).to.be.an('object');",
              "        // Add specific property checks based on CategoryDto structure",
              "    }",
              "});",
              "",
              "// Test response time",
              "pm.test(\"Response time is less than 2000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(2000);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/categories?parent-id={{parentId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "categories"
          ],
          "query": [
            {
              "key": "parent-id",
              "value": "{{parentId}}",
              "description": "Parent category ID to filter by (optional)"
            }
          ]
        },
        "description": "Get categories, optionally filtered by parent ID"
      },
      "response": [
        {
          "name": "Successful Response",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories"
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"items\": [\n    {\n      \"code\": \"C001\",\n      \"name\": \"Consumer Goods\",\n      \"parentCode\": \"C\"\n    },\n    {\n      \"code\": \"J001\",\n      \"name\": \"Jewelry\",\n      \"parentCode\": \"J\"\n    },\n    {\n      \"code\": \"C\",\n      \"name\": \"Consumer Category\",\n      \"parentCode\": null\n    }\n  ]\n}"
        },
        {
          "name": "With Parent Filter",
          "originalRequest": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/categories?parent-id=C",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "parent-id",
                  "value": "C"
                }
              ]
            }
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "cookie": [],
          "body": "{\n  \"items\": [\n    {\n      \"code\": \"C001\",\n      \"name\": \"Consumer Electronics\",\n      \"parentCode\": \"C\"\n    },\n    {\n      \"code\": \"C002\",\n      \"name\": \"Consumer Goods\",\n      \"parentCode\": \"C\"\n    }\n  ]\n}"
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default values if variables don't exist",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'https://localhost:7001');",
          "}",
          "",
          "if (!pm.environment.get('parentId')) {",
          "    pm.environment.set('parentId', 'C');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://localhost:7263",
      "type": "string",
      "description": "Base URL for the finance management API"
    },
    {
      "key": "parentId",
      "value": "C",
      "type": "string",
      "description": "Parent category ID for filtering (e.g., C, J)"
    }
  ]
}